{"version":3,"sources":["components/cards/card.tsx","components/buttons/button.tsx","components/buttons/button-secundary.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","id","value","opened","clickHandler","checked","className","src","alt","onClick","Button","buttonHandler","start","win","title","subtitle","buttonName","ButonSec","Memory","useState","counted","cards","setCards","setStart","counter","setCounter","setWin","shuffle","newOpen","forEach","item","useEffect","item2","map","index","filter","length","openHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc656e00.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.css\"\r\n\r\n\r\n\r\ntype Props = {\r\n    id: number;\r\n    value: string;\r\n    opened: boolean;\r\n    clickHandler: () => void;\r\n    checked: boolean;\r\n    counted: boolean;\r\n\r\n}\r\n\r\nconst Card = ({ id, value, opened, clickHandler, checked }: Props) => {\r\n\r\n    return (\r\n\r\n        \r\n\r\n        <div className=\"col-md-3 cards--wraper\">\r\n            {!checked ? (<div>\r\n                {opened ? (<div className=\"card--open\" >\r\n                   <img className=\"card\" src={value} alt=\"\"/> \r\n                </div>) :\r\n                    (<div className=\"card--open\" onClick={() => clickHandler()}>\r\n\r\n                    </div>)} </div>) :\r\n                (<div className=\"card--open\">\r\n                    <img className=\"card\" src={value} alt=\"\"/> \r\n                </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\nexport default Card","import React from 'react';\r\nimport './button.css'\r\n\r\n\r\ntype Props = {\r\n    //   clicked: boolean;\r\n    buttonHandler: () => void;\r\n    start: boolean;\r\n    win: boolean;\r\n    title: string;\r\n    subtitle: string;\r\n    buttonName: string;\r\n\r\n}\r\n\r\nconst Button = ({ buttonHandler, start, win, title, subtitle, buttonName }: Props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {!start &&\r\n\r\n                <div className=\"button--wrapper__start\">\r\n                    <div className=\"button--content\">\r\n            <h1 className=\"title\">{title}</h1>\r\n            <p className=\"paragraph\">{subtitle}</p>\r\n                        <button className=\"button__start\"\r\n                            onClick={() => buttonHandler()}\r\n            >{buttonName}</button>\r\n                    </div>\r\n                </div>\r\n           \r\n                    \r\n                }\r\n\r\n            {win === true ? (\r\n\r\n                <div className=\"button--wrapper__start\">\r\n                    <div className=\"button--content\">\r\n                        <h1 className=\"title\">Congratulations You Won!</h1>\r\n                        <p className=\"paragraph\">Are you ready to play again?</p>\r\n                        <button className=\"button__start\"\r\n                            onClick={() => buttonHandler()}\r\n                        >Start</button>\r\n                    </div>\r\n                </div>):\r\n                (<div></div>)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Button","import React from 'react';\r\nimport './button.css'\r\n\r\n\r\ntype Props = {\r\n    //   clicked: boolean;\r\n    buttonHandler: () => void;\r\n    buttonName: string;\r\n\r\n}\r\n\r\nconst ButonSec = ({ buttonHandler,  buttonName }: Props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n           \r\n\r\n             \r\n                        <button className=\"button__start button__restart\"\r\n                            onClick={() => buttonHandler()}\r\n            >{buttonName}</button>\r\n                   \r\n              \r\n           \r\n                    \r\n              \r\n         \r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ButonSec","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'flexboxgrid';\nimport Card from './components/cards/card'\nimport Button from './components/buttons/button'\nimport ButtonSec from './components/buttons/button-secundary'\nimport 'shuffle-array'\nimport shuffle from 'shuffle-array';\n\n\n\n\nfunction Memory() {\n\n\n  const [cards, setCards] = useState([\n    { id: 1, value: \"https://picsum.photos/id/1/200/200\", opened: false, checked: false, counted: false },\n    { id: 2, value: \"https://picsum.photos/id/1/200/200\", opened: false, checked: false, counted: false },\n    { id: 3, value: \"https://picsum.photos/id/8/200/200\", opened: false, checked: false, counted: false },\n    { id: 4, value: \"https://picsum.photos/id/8/200/200\", opened: false, checked: false, counted: false },\n    { id: 5, value: \"https://picsum.photos/id/55/200/200\", opened: false, checked: false, counted: false },\n    { id: 6, value: \"https://picsum.photos/id/55/200/200\", opened: false, checked: false, counted: false },\n    { id: 7, value: \"https://picsum.photos/id/101/200/200\", opened: false, checked: false, counted: false },\n    { id: 8, value: \"https://picsum.photos/id/101/200/200\", opened: false, checked: false, counted: false },\n    { id: 9, value: \"https://picsum.photos/id/106/200/200\", opened: false, checked: false, counted: false },\n    { id: 10, value: \"https://picsum.photos/id/106/200/200\", opened: false, checked: false, counted: false },\n    { id: 11, value: \"https://picsum.photos/id/85/200/200\", opened: false, checked: false, counted: false },\n    { id: 12, value: \"https://picsum.photos/id/85/200/200\", opened: false, checked: false, counted: false },\n    { id: 13, value: \"https://picsum.photos/id/555/200/200\", opened: false, checked: false, counted: false },\n    { id: 14, value: \"https://picsum.photos/id/555/200/200\", opened: false, checked: false, counted: false },\n    { id: 15, value: \"https://picsum.photos/id/210/200/200\", opened: false, checked: false, counted: false },\n    { id: 16, value: \"https://picsum.photos/id/210/200/200\", opened: false, checked: false, counted: false }\n  ])\n\n  let shuffler = () => { return shuffle(cards) }\n\n  const [start, setStart] = useState(false)\n  const [counter, setCounter] = useState(0)\n  const [win, setWin] = useState(false)\n\n  const clickHandler = () => {\n    shuffler()\n    const newOpen = [...cards]\n    setCards(newOpen)\n    cards.forEach((item) => {\n      item.opened = false\n      item.checked = false\n    })\n    setStart(true)\n    setWin(false)\n    setCounter(0)\n  }\n\n\n  const openHandler = ((id: number, value: string, checked: boolean) => {\n    const newOpen = [...cards]\n\n    setCounter(counter + 1)\n\n\n    cards.forEach((item) => {\n      item.id === id && (item.opened = !item.opened)\n      item.id === id && (item.counted = !item.counted)\n\n\n      if (item.opened === true && item.value === value && item.id !== id) {\n\n        item.checked = true\n\n        cards.forEach((item) => {\n          if (item.checked === false && item.value === value) {\n            item.checked = true\n          }\n        })\n      }\n    })\n    setCards(newOpen)\n\n    let arr = cards.filter(item => item.checked === true)\n    arr.length === cards.length && setWin(!win)\n  })\n\n\n  useEffect(() => {\n    if (counter % 2 === 0) {\n      cards.forEach((item2) => { item2.opened = false })\n    }\n  }, [cards])\n\n\n\n\n  return (\n    <div className=\"game__wrapper\">\n\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n\n          </div>\n          <div className=\"col-md-6\">\n            <ButtonSec\n              buttonHandler={() => clickHandler()}\n              buttonName=\"Restart\"\n            />\n\n          </div>\n          <div className=\"col-md-3\">\n            \n          </div>\n        </div>\n      </div>\n\n\n\n\n\n      <div className=\"container\">\n        <div className=\"row center-md around-md\">\n          <div className=\"wrapper\">\n\n\n\n\n            {cards.map(({ id, value, opened, checked, counted }, index: number) =>\n              <Card\n                id={id}\n                value={value}\n                opened={opened}\n                clickHandler={() => { openHandler(id, value, checked) }}\n                checked={checked}\n                counted={counted}\n              />\n            )}\n\n          </div>\n        </div>\n\n      </div>\n\n\n\n      <Button\n        buttonHandler={() => clickHandler()}\n        start={start}\n        win={win}\n        title=\"Memory Game\"\n        subtitle=\"Are you ready to play?\"\n        buttonName=\"Start\"\n      />\n    </div>\n  );\n}\n\nexport default Memory;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}